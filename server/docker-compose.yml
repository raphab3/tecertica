version: '3.9'
services:
  # api:
  #   image: node:14.16.0-alpine3.11
  #   container_name: tecertifica-api
  #   working_dir: /app
  #   volumes:
  #     - .:/app
  #     - /etc/localtime:/etc/localtime:ro
  #   env_file:
  #     - .env
  #   environment:
  #     TZ: ${TIMEZONE}
  #     MONGO_URL: mongodb://root:example@mongo:27017
  #     DB_NAME: tecertifica
  #   logging:
  #     driver: 'json-file'
  #     options:
  #       max-size: '10m'
  #       max-file: '5'
  #   restart: always
  #   ports:
  #     - ${SERVER_PORT}:${SERVER_PORT}
  #   command: sh scripts/dev.sh
  #   depends_on:
  #     - mongo
  #     - redis
  #     - mongo-express
  #   networks:
  #     - tecertificanet

  mongo:
    container_name: tecertifica-mongo
    image: mongo
    restart: always
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - /var/lib/docker/volumes/tecertificadb/_data/db
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - tecertificanet
      
  mongo-express:
    container_name: tecertifica-mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/
    networks:
      - tecertificanet

  redis:
    image: redis:6.2.3-alpine
    container_name: tecertifica-redis
    ports:
      - 6379:6379
    expose:
      - 6379
    environment:
      TZ: ${TIMEZONE}
    restart: always
    networks:
      - tecertificanet
 
networks:
  tecertificanet:
    name: tecertificanet
